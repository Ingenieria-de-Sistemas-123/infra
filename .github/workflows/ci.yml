name: CI (infra)

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  compose-ci:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    env:
      COMPOSE_FILE: docker-compose.dev.yml

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (read)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_READ_USER || github.actor }}
          password: ${{ secrets.GHCR_READ_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Create .env for CI
        run: |
          cat > .env << 'EOF'
          DB_NAME=snippet-db
          DB_USERNAME=postgres
          DB_PASSWORD=postgres
          EOF
          echo "Created .env:"
          cat .env

      - name: Validate docker-compose syntax
        run: docker compose config

      - name: Pull images
        run: docker compose pull

      - name: Start stack
        run: docker compose up -d

      - name: Wait for services (HTTP probes)
        shell: bash
        run: |
          set -e
          echo "Waiting for snippet-service on :8081 ..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8081/actuator/health | grep -q '"status":"UP"'; then
              echo "snippet-service UP"; break
            fi
            sleep 2
          done

          echo "Waiting for language-service on :8082 ..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8082/actuator/health | grep -q '"status":"UP"'; then
              echo "language-service UP"; break
            fi
            sleep 2
          done
          
          echo "Waiting for language-service on :8082 ..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8082/actuator/health | grep -q '"status":"UP"'; then
              echo "permission-service UP"; break
            fi
            sleep 2
          done

      - name: Show logs on failure
        if: failure()
        run: |
          docker compose ps
          docker compose logs --no-color --timestamps snippet-db || true
          docker compose logs --no-color --timestamps snippet-service || true
          docker compose logs --no-color --timestamps language-service || true
          docker compose logs --no-color --timestamps permission-service || true

      - name: Down stack
        if: always()
        run: docker compose down -v
